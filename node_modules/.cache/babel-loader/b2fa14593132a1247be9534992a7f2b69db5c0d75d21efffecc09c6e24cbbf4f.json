{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\react-app-with-tailwind\\\\src\\\\Time.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\n\n// function Time() {\n//     const myElement = (\n//         <div>\n//             <h2 style={{fontSize:'14px', marginTop:'-347px'}}>Today's Date : <b>{new Date().toDateString()}</b> | Current Time : <b>{new Date().toLocaleTimeString()}</b></h2>\n//         </div>\n//     );\n\n//     ReactDOM.render(\n//         myElement,\n//         document.getElementById(\"roots\")\n//     );\n// }\n\n// setInterval(Time, 1000);\n\n// const Time = () => {\n//     const [date, setDate] = useState(new Date());\n\n//     useEffect(() => {\n//         var timer = setInterval(() => { setDate(new Date()) }, 1000)\n//         return function cleanup() {\n//                 clearInterval(timer);\n//             }\n//     }\n//     );\n\n//     return(\n//         <>\n//             <h1 className=\"text-center text-xl\">Date : <b>{date.toLocaleDateString()} </b> | Time : <b>{date.toLocaleTimeString()}</b></h1>\n//         </>\n//     )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Time extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: new Date()\n    };\n  }\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  tick() {\n    this.setState({\n      count: new Date()\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-xl\",\n        children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \" font-bold\",\n          children: this.state.count.toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 59\n        }, this), \"|  Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \" font-bold\",\n          children: this.state.count.toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 143\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default Time;","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","Time","Component","constructor","props","state","count","Date","componentDidMount","timer","setInterval","tick","componentWillUnmount","clearInterval","setState","render","children","className","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString"],"sources":["C:/Users/USER/react-app-with-tailwind/src/Time.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n \r\n// function Time() {\r\n//     const myElement = (\r\n//         <div>\r\n//             <h2 style={{fontSize:'14px', marginTop:'-347px'}}>Today's Date : <b>{new Date().toDateString()}</b> | Current Time : <b>{new Date().toLocaleTimeString()}</b></h2>\r\n//         </div>\r\n//     );\r\n \r\n//     ReactDOM.render(\r\n//         myElement,\r\n//         document.getElementById(\"roots\")\r\n//     );\r\n// }\r\n \r\n// setInterval(Time, 1000);\r\n\r\n\r\n// const Time = () => {\r\n//     const [date, setDate] = useState(new Date());\r\n\r\n//     useEffect(() => {\r\n//         var timer = setInterval(() => { setDate(new Date()) }, 1000)\r\n//         return function cleanup() {\r\n//                 clearInterval(timer);\r\n//             }\r\n//     }\r\n//     );\r\n\r\n//     return(\r\n//         <>\r\n//             <h1 className=\"text-center text-xl\">Date : <b>{date.toLocaleDateString()} </b> | Time : <b>{date.toLocaleTimeString()}</b></h1>\r\n//         </>\r\n//     )\r\n// }\r\n\r\nclass Time extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {count : new Date()};\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timer = setInterval(() => {\r\n            this.tick()\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    tick(){\r\n        this.setState({count : new Date()});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <h1 className=\"text-center text-xl\">Date: <span className=\" font-bold\">{this.state.count.toLocaleDateString()}</span>|  Time: <span className=\" font-bold\">{this.state.count.toLocaleTimeString()}</span></h1>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Time;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,IAAI,SAASR,KAAK,CAACS,SAAS,CAAC;EAC/BC,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAACC,KAAK,EAAG,IAAIC,IAAI,CAAC;IAAC,CAAC;EACrC;EAEAC,iBAAiBA,CAAA,EAAE;IACf,IAAI,CAACC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC3B,IAAI,CAACC,IAAI,CAAC,CAAC;IACf,CAAC,EAAE,IAAI,CAAC;EACZ;EAEAC,oBAAoBA,CAAA,EAAE;IAClBC,aAAa,CAAC,IAAI,CAACJ,KAAK,CAAC;EAC7B;EAEAE,IAAIA,CAAA,EAAE;IACF,IAAI,CAACG,QAAQ,CAAC;MAACR,KAAK,EAAG,IAAIC,IAAI,CAAC;IAAC,CAAC,CAAC;EACvC;EAEAQ,MAAMA,CAAA,EAAE;IACJ,oBACIjB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,eACIlB,OAAA;QAAImB,SAAS,EAAC,qBAAqB;QAAAD,QAAA,GAAC,QAAM,eAAAlB,OAAA;UAAMmB,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAE,IAAI,CAACX,KAAK,CAACC,KAAK,CAACY,kBAAkB,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,aAAS,eAAAxB,OAAA;UAAMmB,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAE,IAAI,CAACX,KAAK,CAACC,KAAK,CAACiB,kBAAkB,CAAC;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBAChN,CAAC;EAEX;AACJ;AAEA,eAAerB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}