{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\react-app-with-tailwind\\\\src\\\\Form.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass MyForm extends React.Component {\n  change(check) {\n    let val = check.target.value;\n    if (Number(val)) {\n      document.getElementById('error').innerHTML = \"Please Enter a valid text\";\n      document.getElementById('yes').innerHTML = \"\";\n    } else if (val == \"\") {\n      document.getElementById('error').innerHTML = \"You can't enter an empty space\";\n      document.getElementById('yes').innerHTML = \"\";\n    } else {\n      document.getElementById('yes').innerHTML = \"Entered Value is : \" + val;\n      document.getElementById('error').innerHTML = \"\";\n    }\n  }\n\n  // state = { inputValue : \"\"};\n\n  // onSubmit = (event) => {\n  //     event.preventDefault();\n  //     document.getElementById('yes').innerHTML = \"The name you entered was \" + \n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"error\",\n        className: \" text-red-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"yes\",\n        className: \" text-green-800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border-2 border-black rounded-md mt-2 ml-2\",\n          onChange: this.change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 128\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default MyForm;","map":{"version":3,"names":["React","ReactDOM","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MyForm","Component","change","check","val","target","value","Number","document","getElementById","innerHTML","render","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange"],"sources":["C:/Users/USER/react-app-with-tailwind/src/Form.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useState } from 'react';\r\n\r\nclass MyForm extends React.Component {\r\n    change(check){\r\n        let val = check.target.value;\r\n        if(Number(val)){\r\n           document.getElementById('error').innerHTML = \"Please Enter a valid text\";\r\n           document.getElementById('yes').innerHTML = \"\";\r\n        }else if(val==\"\"){\r\n            document.getElementById('error').innerHTML = \"You can't enter an empty space\";\r\n            document.getElementById('yes').innerHTML = \"\";\r\n        }else{\r\n            document.getElementById('yes').innerHTML = \"Entered Value is : \" + val;\r\n            document.getElementById('error').innerHTML = \"\";\r\n        }\r\n    }\r\n\r\n    // state = { inputValue : \"\"};\r\n\r\n    // onSubmit = (event) => {\r\n    //     event.preventDefault();\r\n    //     document.getElementById('yes').innerHTML = \"The name you entered was \" + \r\n    // }\r\n      render() {\r\n                return(\r\n                    <>\r\n                        <h1 id='error' className=' text-red-600'></h1>\r\n                        <h1 id='yes' className=' text-green-800'></h1>\r\n                        <form>\r\n                            <input type=\"text\" className='border-2 border-black rounded-md mt-2 ml-2' onChange={this.change} /><br/>\r\n                            <button>Submit</button>\r\n                        </form>\r\n                    </>\r\n            );\r\n        }\r\n    }\r\nexport default MyForm;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,MAAM,SAASP,KAAK,CAACQ,SAAS,CAAC;EACjCC,MAAMA,CAACC,KAAK,EAAC;IACT,IAAIC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC5B,IAAGC,MAAM,CAACH,GAAG,CAAC,EAAC;MACZI,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,SAAS,GAAG,2BAA2B;MACxEF,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,SAAS,GAAG,EAAE;IAChD,CAAC,MAAK,IAAGN,GAAG,IAAE,EAAE,EAAC;MACbI,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,SAAS,GAAG,gCAAgC;MAC7EF,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,SAAS,GAAG,EAAE;IACjD,CAAC,MAAI;MACDF,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,SAAS,GAAG,qBAAqB,GAAGN,GAAG;MACtEI,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,SAAS,GAAG,EAAE;IACnD;EACJ;;EAEA;;EAEA;EACA;EACA;EACA;EACEC,MAAMA,CAAA,EAAG;IACC,oBACId,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACIf,OAAA;QAAIgB,EAAE,EAAC,OAAO;QAACC,SAAS,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CrB,OAAA;QAAIgB,EAAE,EAAC,KAAK;QAACC,SAAS,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CrB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAOsB,IAAI,EAAC,MAAM;UAACL,SAAS,EAAC,4CAA4C;UAACM,QAAQ,EAAE,IAAI,CAAClB;QAAO;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAArB,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxGrB,OAAA;UAAAe,QAAA,EAAQ;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA,eACT,CAAC;EAEf;AACJ;AACJ,eAAelB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}