{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\react-app-with-tailwind\\\\src\\\\QuizApp.js\";\nimport React from \"react\";\nimport QuizTitle from \"./QuizTitle\";\nimport Question from \"./Questions\";\nimport Options from \"./Options\";\nimport QuestionBank from \"./QuestionBank\";\nimport Score from \"./Score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuizApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleOptionChange = e => {\n      this.setState({\n        selectedOption: e.target.value\n      });\n    };\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      this.checkAnswer();\n      this.handleNextQuestion();\n    };\n    this.checkAnswer = () => {\n      const [questionBank, currentQuestion, selectedOption, score] = this.state;\n      if (selectedOption === questionBank[currentQuestion].answer) {\n        this.setState(prevState => ({\n          score: prevState.score + 1\n        }));\n      }\n    };\n    this.handleNextQuestion = () => {\n      const [questionBank, currentQuestion] = this.state;\n      if (currentQuestion + 1 < questionBank.length) {\n        this.setState(prevState => ({\n          currentQuestion: prevState.currentQuestion + 1,\n          selectedOption: \"\"\n        }));\n      } else {\n        this.setState({\n          quizEnd: true\n        });\n      }\n    };\n    this.state = {\n      questionBank: QuestionBank,\n      currentQuestion: 0,\n      selectedOption: \"\",\n      score: 0,\n      quizEnd: false\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-center items-center p-4 bg-gray-400\",\n      children: [\"const [ questionBank, currentQuestion, selectedOption, score, quizEnd ] = this.state;\", /*#__PURE__*/_jsxDEV(QuizTitle, {\n        value: \"MY QUIZ APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this), !quizEnd ? /*#__PURE__*/_jsxDEV(Question, {\n        question: questionBank[currentQuestion],\n        selectedOption: selectedOption,\n        onOptionChange: this.handleOptionChange,\n        onSubmit: this.handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Score, {\n        score: score,\n        onNextQuestion: this.handleNextQuestion,\n        className: \"score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default QuizApp;","map":{"version":3,"names":["React","QuizTitle","Question","Options","QuestionBank","Score","jsxDEV","_jsxDEV","QuizApp","Component","constructor","props","handleOptionChange","e","setState","selectedOption","target","value","handleFormSubmit","preventDefault","checkAnswer","handleNextQuestion","questionBank","currentQuestion","score","state","answer","prevState","length","quizEnd","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","onOptionChange","onSubmit","onNextQuestion"],"sources":["C:/Users/USER/react-app-with-tailwind/src/QuizApp.js"],"sourcesContent":["import React from \"react\";\r\nimport QuizTitle from \"./QuizTitle\";\r\nimport Question from \"./Questions\";\r\nimport Options from \"./Options\";\r\nimport QuestionBank from \"./QuestionBank\";\r\nimport Score from \"./Score\";\r\n\r\nclass QuizApp extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            questionBank: QuestionBank,\r\n            currentQuestion: 0,\r\n            selectedOption: \"\",\r\n            score: 0,\r\n            quizEnd: false,\r\n        };        \r\n    }\r\n\r\n    handleOptionChange = (e) => {\r\n        this.setState({ selectedOption: e.target.value });\r\n    };\r\n \r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.checkAnswer();\r\n        this.handleNextQuestion();\r\n    };\r\n \r\n    checkAnswer = () => {\r\n        const [ questionBank, currentQuestion, selectedOption, score ] = this.state;\r\n        if (selectedOption === questionBank[currentQuestion].answer) {\r\n            this.setState((prevState) => ({ score: prevState.score + 1 }));\r\n        }\r\n    };\r\n \r\n    handleNextQuestion = () => {\r\n        const [ questionBank, currentQuestion ] = this.state;\r\n        if (currentQuestion + 1 < questionBank.length) {\r\n            this.setState((prevState) => ({\r\n                currentQuestion: prevState.currentQuestion + 1,\r\n                selectedOption: \"\",\r\n            }));\r\n        } else {\r\n            this.setState({\r\n                quizEnd: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className='justify-center items-center p-4 bg-gray-400'>\r\n                const [ questionBank, currentQuestion, selectedOption, score, quizEnd ] = this.state;\r\n               <QuizTitle value=\"MY QUIZ APP\" /> \r\n               {!quizEnd ? (\r\n                    <Question\r\n                        question={questionBank[currentQuestion]}\r\n                        selectedOption={selectedOption}\r\n                        onOptionChange={this.handleOptionChange}\r\n                        onSubmit={this.handleFormSubmit}\r\n                    />\r\n                ) : (\r\n                    <Score\r\n                        score={score}\r\n                        onNextQuestion={this.handleNextQuestion}\r\n                        className=\"score\"\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}